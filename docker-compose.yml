version: '4.0'
# can't be used in portainer b/c of local docker image builds, should be rerun regularly for updates
# docker compose up -d --build
# https://github.com/nextcloud/docker/blob/master/.examples/docker-compose/with-nginx-proxy/postgres/fpm/docker-compose.yml
# https://github.com/nextcloud/docker/tree/master/.examples/docker-compose/with-nginx-proxy/postgres/fpm/proxy
networks:
  nextcloud_network:
    external: false

# log into root and 
# https://github.com/matiasdelellis/facerecognition/wiki/Models#comparison
# chown fix permission in root
# run ./occ in root to get app user and log in using id
# in app user user
# ./occ app:install mediadc
# ./occ app:install facerecognition
#  ./occ face:setup -M 8GB
# install default models
# ./occ face:setup -m 1
# user must have face recognition enabled, also follow prompt to finally run
# ./occ face:background-job
services:
   db_15:
    container_name: nextcloud_postgres15
    image: postgres:15-alpine
    networks: 
      - nextcloud_network
    restart: always
    ports:
      - "7102:5432"
    volumes:
      - pg_15:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}

   pgadmin:
    container_name: nextcloud_pgadmin
    image: dpage/pgadmin4
    restart: unless-stopped
    networks: 
      - nextcloud_network
    environment:
    # TODO: update values
      PGADMIN_DEFAULT_EMAIL: support@example.com
      PGADMIN_DEFAULT_PASSWORD: easypassword1234!
    volumes:
      - pgadmin-data:/var/lib/pgadmin
      - pgadmin-certs:/var/lib/postgresql/certs
    ports:
      - "5055:80"
    links:
      - "db_15:database15"

   redis:
    image: redis:alpine
    container_name: nextcloud_redis
    networks: 
      - nextcloud_network 
    restart: unless-stopped
    command: ["--databases", "1"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - redis:/data

# https://stackoverflow.com/a/66829831/2875452
   redisinsight:
    image: redislabs/redisinsight:latest
    container_name: nextcloud_redisinsight
    networks: 
      - nextcloud_network 
    ports:
      - '8001:8001'
    links:
      - "redis:redis"
    volumes:
      - redisinsight:/db

# configure to use by updating config.php file
# see https://docs.nextcloud.com/server/latest/admin_manual/installation/server_tuning.html
# and https://help.nextcloud.com/t/how-can-i-tell-if-nc-is-using-imaginary/138386
# https://github.com/nextcloud/all-in-one/blob/main/Containers/imaginary/Dockerfile
# https://okxo.de/speed-up-nextcloud-preview-generation-with-imaginary/
# ./occ config:system:set enabledPreviewProviders 0 --value="OC\\Preview\\Imaginary"
# ./occ config:system:set preview_imaginary_url --value="http://imaginary:9000"
# test curl -O "http://127.0.0.1:9001/crop?width=500&height=400&url=https://raw.githubusercontent.com/h2non/imaginary/master/testdata/large.jpg"
   imaginary:
    container_name: nextcloud_imaginary
    image: nextcloud/aio-imaginary:latest
    restart: always
    networks: 
      - nextcloud_network 
    environment:
      - PORT=9000
    ports:
      - "9001:9000"
    command: -concurrency 50 -enable-url-source -log-level debug

   app:
    container_name: nextcloud_app
    build: ./app
    restart: always
    networks: 
      - nextcloud_network
    volumes:
      - nextcloud:/var/www/html:z
      # TODO: update your external drive path here
      - d:/nextcloud_data:/var/www/html/data:z
    environment:
      - NEXTCLOUD_TRUSTED_DOMAINS=${NEXTCLOUD_TRUSTED_DOMAINS}
      - POSTGRES_HOST=database:5432
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - NEXTCLOUD_ADMIN_PASSWORD=${ADMIN_USERNAME}
      - NEXTCLOUD_ADMIN_USER=${ADMIN_PASSWORD}
      - PHP_MEMORY_LIMIT=8192M
      # TODO: may want 2048M memory limit if ram is 16 GB
      - PHP_UPLOAD_LIMIT=8192M
      - REDIS_HOST=redis
    links:
      - "imaginary:imaginary"
      - "db_15:database"
      - "redis:redis"

   web:
    container_name: nextcloud_web
    build: ./web
    restart: always
    ports:
      - ${HTTP_PORT}:80
    volumes:
      - nextcloud:/var/www/html:ro
      - d:/nextcloud_data:/var/www/html/data:ro
      - certs:/etc/nginx/certs:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro
    # TODO: update values
    environment:
      - VIRTUAL_HOST=nextcloud.example.com
    depends_on:
      - app
    networks:
      - nextcloud_network

   cron:
    container_name: nextcloud_cron
    build: ./app
    networks: 
      - nextcloud_network
    restart: always
    volumes:
      - nextcloud:/var/www/html:z
      - d:/nextcloud_data:/var/www/html/data:z
      - nextcloud_cron:/var/spool/cron/crontabs
    # add to nextcloud_cron volume www-data
    # 0 4 * * * php -f /var/www/html/occ preview:pre-generate
    # 0 4 * * * php -f /var/www/html/occ preview:pre-generate
    # */30 * * * * php -f /var/www/html/occ face:background_job -t 900
    # 0 2 * * 6 php -f /var/www/html/occ files:scan --all
    # to www-data in the cron volume
    entrypoint: /cron.sh
    links:
      - "imaginary:imaginary"
      - "db_15:database"
      - "redis:redis"

volumes:
  pg_15:
  nextcloud:
  nextcloud_config:
  pgadmin-data:
  pgadmin-certs:
  redisinsight:
  redis:
    driver: local
  certs:
